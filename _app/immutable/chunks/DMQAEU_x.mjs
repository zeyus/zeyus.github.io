var Re=Object.defineProperty;var Pe=(t,e,r)=>e in t?Re(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var h=(t,e,r)=>Pe(t,typeof e!="symbol"?e+"":e,r);import{g as qe,t as I,f as Ve,a as S,s as N,b as De}from"./BHX9CyLr.mjs";import{i as Ne}from"./wIM158lQ.mjs";import{p as ge,aE as O,a8 as ue,k as $e,f as F,s as $,a as ye,b,g as f,aH as je,c as m,r as v,t as C,n as Q,a4 as Fe}from"./D28QIPhe.mjs";import{i as R}from"./DqOltSx5.mjs";import{e as ze,i as We}from"./zp9rG-Vv.mjs";import{h as J}from"./vxXdF2cD.mjs";import{c as Z,d as K}from"./DHmnsc2O.mjs";import{b as Me}from"./BjWnVEGK.mjs";import{B as He}from"./DxslBBtv.mjs";var ee=function(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t},d;(function(t){t[t.EOS=0]="EOS",t[t.Text=1]="Text",t[t.Incomplete=2]="Incomplete",t[t.ESC=3]="ESC",t[t.Unknown=4]="Unknown",t[t.SGR=5]="SGR",t[t.OSCURL=6]="OSCURL"})(d||(d={}));class Ge{constructor(){this.VERSION="6.0.2",this.setup_palettes(),this._use_classes=!1,this.bold=!1,this.faint=!1,this.italic=!1,this.underline=!1,this.fg=this.bg=null,this._buffer="",this._url_allowlist={http:1,https:1},this._escape_html=!0,this.boldStyle="font-weight:bold",this.faintStyle="opacity:0.7",this.italicStyle="font-style:italic",this.underlineStyle="text-decoration:underline"}set use_classes(e){this._use_classes=e}get use_classes(){return this._use_classes}set url_allowlist(e){this._url_allowlist=e}get url_allowlist(){return this._url_allowlist}set escape_html(e){this._escape_html=e}get escape_html(){return this._escape_html}set boldStyle(e){this._boldStyle=e}get boldStyle(){return this._boldStyle}set faintStyle(e){this._faintStyle=e}get faintStyle(){return this._faintStyle}set italicStyle(e){this._italicStyle=e}get italicStyle(){return this._italicStyle}set underlineStyle(e){this._underlineStyle=e}get underlineStyle(){return this._underlineStyle}setup_palettes(){this.ansi_colors=[[{rgb:[0,0,0],class_name:"ansi-black"},{rgb:[187,0,0],class_name:"ansi-red"},{rgb:[0,187,0],class_name:"ansi-green"},{rgb:[187,187,0],class_name:"ansi-yellow"},{rgb:[0,0,187],class_name:"ansi-blue"},{rgb:[187,0,187],class_name:"ansi-magenta"},{rgb:[0,187,187],class_name:"ansi-cyan"},{rgb:[255,255,255],class_name:"ansi-white"}],[{rgb:[85,85,85],class_name:"ansi-bright-black"},{rgb:[255,85,85],class_name:"ansi-bright-red"},{rgb:[0,255,0],class_name:"ansi-bright-green"},{rgb:[255,255,85],class_name:"ansi-bright-yellow"},{rgb:[85,85,255],class_name:"ansi-bright-blue"},{rgb:[255,85,255],class_name:"ansi-bright-magenta"},{rgb:[85,255,255],class_name:"ansi-bright-cyan"},{rgb:[255,255,255],class_name:"ansi-bright-white"}]],this.palette_256=[],this.ansi_colors.forEach(i=>{i.forEach(s=>{this.palette_256.push(s)})});let e=[0,95,135,175,215,255];for(let i=0;i<6;++i)for(let s=0;s<6;++s)for(let n=0;n<6;++n){let l={rgb:[e[i],e[s],e[n]],class_name:"truecolor"};this.palette_256.push(l)}let r=8;for(let i=0;i<24;++i,r+=10){let s={rgb:[r,r,r],class_name:"truecolor"};this.palette_256.push(s)}}escape_txt_for_html(e){return this._escape_html?e.replace(/[&<>"']/gm,r=>{if(r==="&")return"&amp;";if(r==="<")return"&lt;";if(r===">")return"&gt;";if(r==='"')return"&quot;";if(r==="'")return"&#x27;"}):e}append_buffer(e){var r=this._buffer+e;this._buffer=r}get_next_packet(){var e={kind:d.EOS,text:"",url:""},r=this._buffer.length;if(r==0)return e;var i=this._buffer.indexOf("\x1B");if(i==-1)return e.kind=d.Text,e.text=this._buffer,this._buffer="",e;if(i>0)return e.kind=d.Text,e.text=this._buffer.slice(0,i),this._buffer=this._buffer.slice(i),e;if(i==0){if(r<3)return e.kind=d.Incomplete,e;var s=this._buffer.charAt(1);if(s!="["&&s!="]"&&s!="(")return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e;if(s=="["){this._csi_regex||(this._csi_regex=fe(ce||(ce=ee([`
                        ^                           # beginning of line
                                                    #
                                                    # First attempt
                        (?:                         # legal sequence
                          \x1B[                      # CSI
                          ([<-?]?)              # private-mode char
                          ([d;]*)                    # any digits or semicolons
                          ([ -/]?               # an intermediate modifier
                          [@-~])                # the command
                        )
                        |                           # alternate (second attempt)
                        (?:                         # illegal sequence
                          \x1B[                      # CSI
                          [ -~]*                # anything legal
                          ([\0-:])              # anything illegal
                        )
                    `],[`
                        ^                           # beginning of line
                                                    #
                                                    # First attempt
                        (?:                         # legal sequence
                          \\x1b\\[                      # CSI
                          ([\\x3c-\\x3f]?)              # private-mode char
                          ([\\d;]*)                    # any digits or semicolons
                          ([\\x20-\\x2f]?               # an intermediate modifier
                          [\\x40-\\x7e])                # the command
                        )
                        |                           # alternate (second attempt)
                        (?:                         # illegal sequence
                          \\x1b\\[                      # CSI
                          [\\x20-\\x7e]*                # anything legal
                          ([\\x00-\\x1f:])              # anything illegal
                        )
                    `]))));let l=this._buffer.match(this._csi_regex);if(l===null)return e.kind=d.Incomplete,e;if(l[4])return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e;l[1]!=""||l[3]!="m"?e.kind=d.Unknown:e.kind=d.SGR,e.text=l[2];var n=l[0].length;return this._buffer=this._buffer.slice(n),e}else if(s=="]"){if(r<4)return e.kind=d.Incomplete,e;if(this._buffer.charAt(2)!="8"||this._buffer.charAt(3)!=";")return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e;this._osc_st||(this._osc_st=Ye(he||(he=ee([`
                        (?:                         # legal sequence
                          (\x1B\\)                    # ESC                           |                           # alternate
                          (\x07)                      # BEL (what xterm did)
                        )
                        |                           # alternate (second attempt)
                        (                           # illegal sequence
                          [\0-]                 # anything illegal
                          |                           # alternate
                          [\b-]                 # anything illegal
                          |                           # alternate
                          [-]                 # anything illegal
                        )
                    `],[`
                        (?:                         # legal sequence
                          (\\x1b\\\\)                    # ESC \\
                          |                           # alternate
                          (\\x07)                      # BEL (what xterm did)
                        )
                        |                           # alternate (second attempt)
                        (                           # illegal sequence
                          [\\x00-\\x06]                 # anything illegal
                          |                           # alternate
                          [\\x08-\\x1a]                 # anything illegal
                          |                           # alternate
                          [\\x1c-\\x1f]                 # anything illegal
                        )
                    `])))),this._osc_st.lastIndex=0;{let c=this._osc_st.exec(this._buffer);if(c===null)return e.kind=d.Incomplete,e;if(c[3])return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e}{let c=this._osc_st.exec(this._buffer);if(c===null)return e.kind=d.Incomplete,e;if(c[3])return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e}this._osc_regex||(this._osc_regex=fe(de||(de=ee([`
                        ^                           # beginning of line
                                                    #
                        \x1B]8;                    # OSC Hyperlink
                        [ -:<-~]*       # params (excluding ;)
                        ;                           # end of params
                        ([!-~]{0,512})        # URL capture
                        (?:                         # ST
                          (?:\x1B\\)                  # ESC                           |                           # alternate
                          (?:\x07)                    # BEL (what xterm did)
                        )
                        ([ -~]+)              # TEXT capture
                        \x1B]8;;                   # OSC Hyperlink End
                        (?:                         # ST
                          (?:\x1B\\)                  # ESC                           |                           # alternate
                          (?:\x07)                    # BEL (what xterm did)
                        )
                    `],[`
                        ^                           # beginning of line
                                                    #
                        \\x1b\\]8;                    # OSC Hyperlink
                        [\\x20-\\x3a\\x3c-\\x7e]*       # params (excluding ;)
                        ;                           # end of params
                        ([\\x21-\\x7e]{0,512})        # URL capture
                        (?:                         # ST
                          (?:\\x1b\\\\)                  # ESC \\
                          |                           # alternate
                          (?:\\x07)                    # BEL (what xterm did)
                        )
                        ([\\x20-\\x7e]+)              # TEXT capture
                        \\x1b\\]8;;                   # OSC Hyperlink End
                        (?:                         # ST
                          (?:\\x1b\\\\)                  # ESC \\
                          |                           # alternate
                          (?:\\x07)                    # BEL (what xterm did)
                        )
                    `]))));let l=this._buffer.match(this._osc_regex);if(l===null)return e.kind=d.ESC,e.text=this._buffer.slice(0,1),this._buffer=this._buffer.slice(1),e;e.kind=d.OSCURL,e.url=l[1],e.text=l[2];var n=l[0].length;return this._buffer=this._buffer.slice(n),e}else if(s=="(")return e.kind=d.Unknown,this._buffer=this._buffer.slice(3),e}}ansi_to_html(e){this.append_buffer(e);for(var r=[];;){var i=this.get_next_packet();if(i.kind==d.EOS||i.kind==d.Incomplete)break;i.kind==d.ESC||i.kind==d.Unknown||(i.kind==d.Text?r.push(this.transform_to_html(this.with_state(i))):i.kind==d.SGR?this.process_ansi(i):i.kind==d.OSCURL&&r.push(this.process_hyperlink(i)))}return r.join("")}with_state(e){return{bold:this.bold,faint:this.faint,italic:this.italic,underline:this.underline,fg:this.fg,bg:this.bg,text:e.text}}process_ansi(e){let r=e.text.split(";");for(;r.length>0;){let i=r.shift(),s=parseInt(i,10);if(isNaN(s)||s===0)this.fg=null,this.bg=null,this.bold=!1,this.faint=!1,this.italic=!1,this.underline=!1;else if(s===1)this.bold=!0;else if(s===2)this.faint=!0;else if(s===3)this.italic=!0;else if(s===4)this.underline=!0;else if(s===21)this.bold=!1;else if(s===22)this.faint=!1,this.bold=!1;else if(s===23)this.italic=!1;else if(s===24)this.underline=!1;else if(s===39)this.fg=null;else if(s===49)this.bg=null;else if(s>=30&&s<38)this.fg=this.ansi_colors[0][s-30];else if(s>=40&&s<48)this.bg=this.ansi_colors[0][s-40];else if(s>=90&&s<98)this.fg=this.ansi_colors[1][s-90];else if(s>=100&&s<108)this.bg=this.ansi_colors[1][s-100];else if((s===38||s===48)&&r.length>0){let n=s===38,l=r.shift();if(l==="5"&&r.length>0){let p=parseInt(r.shift(),10);p>=0&&p<=255&&(n?this.fg=this.palette_256[p]:this.bg=this.palette_256[p])}if(l==="2"&&r.length>2){let p=parseInt(r.shift(),10),c=parseInt(r.shift(),10),x=parseInt(r.shift(),10);if(p>=0&&p<=255&&c>=0&&c<=255&&x>=0&&x<=255){let w={rgb:[p,c,x],class_name:"truecolor"};n?this.fg=w:this.bg=w}}}}}transform_to_html(e){let r=e.text;if(r.length===0||(r=this.escape_txt_for_html(r),!e.bold&&!e.italic&&!e.underline&&e.fg===null&&e.bg===null))return r;let i=[],s=[],n=e.fg,l=e.bg;e.bold&&i.push(this._boldStyle),e.faint&&i.push(this._faintStyle),e.italic&&i.push(this._italicStyle),e.underline&&i.push(this._underlineStyle),this._use_classes?(n&&(n.class_name!=="truecolor"?s.push(`${n.class_name}-fg`):i.push(`color:rgb(${n.rgb.join(",")})`)),l&&(l.class_name!=="truecolor"?s.push(`${l.class_name}-bg`):i.push(`background-color:rgb(${l.rgb.join(",")})`))):(n&&i.push(`color:rgb(${n.rgb.join(",")})`),l&&i.push(`background-color:rgb(${l.rgb})`));let p="",c="";return s.length&&(p=` class="${s.join(" ")}"`),i.length&&(c=` style="${i.join(";")}"`),`<span${c}${p}>${r}</span>`}process_hyperlink(e){let r=e.url.split(":");return r.length<1||!this._url_allowlist[r[0]]?"":`<a href="${this.escape_txt_for_html(e.url)}">${this.escape_txt_for_html(e.text)}</a>`}}function fe(t,...e){let r=t.raw[0],i=/^\s+|\s+\n|\s*#[\s\S]*?\n|\n/gm,s=r.replace(i,"");return new RegExp(s)}function Ye(t,...e){let r=t.raw[0],i=/^\s+|\s+\n|\s*#[\s\S]*?\n|\n/gm,s=r.replace(i,"");return new RegExp(s,"g")}var ce,he,de;const Xe=32,Qe=34,Je=35,pe=255,Ze=8,Ke="none",et=1,tt=[16,8,7,6,5],rt=[1,2],it=["none","even","odd"],st=["none","odd","even"],nt=[1,1.5,2],te={protocol:0,usbControlInterfaceClass:2,usbTransferInterfaceClass:10};function be(t,e){const r=t.configurations[0];for(const i of r.interfaces)if(i.alternates[0].interfaceClass===e)return i;throw new TypeError(`Unable to find interface with class ${e}.`)}function _e(t,e){const r=t.alternates[0];for(const i of r.endpoints)if(i.direction==e)return i;throw new TypeError(`Interface ${t.interfaceNumber} does not have an ${e} endpoint.`)}class at{constructor(e,r,i){h(this,"device_");h(this,"endpoint_");h(this,"onError_");h(this,"type");this.type="bytes",this.device_=e,this.endpoint_=r,this.onError_=i}pull(e){(async()=>{var i;let r;if(e.desiredSize){const s=e.desiredSize/this.endpoint_.packetSize;r=Math.ceil(s)*this.endpoint_.packetSize}else r=this.endpoint_.packetSize;try{const s=await this.device_.transferIn(this.endpoint_.endpointNumber,r);if(s.status!="ok"&&(e.error(`USB error: ${s.status}`),this.onError_()),(i=s.data)!=null&&i.buffer){const n=new Uint8Array(s.data.buffer,s.data.byteOffset,s.data.byteLength);e.enqueue(n)}}catch(s){e.error(s.toString()),this.onError_()}})()}}class ot{constructor(e,r,i){h(this,"device_");h(this,"endpoint_");h(this,"onError_");this.device_=e,this.endpoint_=r,this.onError_=i}async write(e,r){try{const i=await this.device_.transferOut(this.endpoint_.endpointNumber,e);i.status!="ok"&&(r.error(i.status),this.onError_())}catch(i){r.error(i.toString()),this.onError_()}}}let re=class{constructor(e,r){h(this,"polyfillOptions_");h(this,"device_");h(this,"controlInterface_");h(this,"transferInterface_");h(this,"inEndpoint_");h(this,"outEndpoint_");h(this,"serialOptions_");h(this,"readable_");h(this,"writable_");h(this,"outputSignals_");this.polyfillOptions_={...te,...r},this.outputSignals_={dataTerminalReady:!1,requestToSend:!1,break:!1},this.device_=e,this.controlInterface_=be(this.device_,this.polyfillOptions_.usbControlInterfaceClass),this.transferInterface_=be(this.device_,this.polyfillOptions_.usbTransferInterfaceClass),this.inEndpoint_=_e(this.transferInterface_,"in"),this.outEndpoint_=_e(this.transferInterface_,"out"),this.readable_=null,this.writable_=null,this.serialOptions_={baudRate:9600}}get readable(){return!this.readable_&&this.device_.opened&&(this.readable_=new ReadableStream(new at(this.device_,this.inEndpoint_,()=>{this.readable_=null}),{highWaterMark:this.serialOptions_.bufferSize??pe})),this.readable_}get writable(){return!this.writable_&&this.device_.opened&&(this.writable_=new WritableStream(new ot(this.device_,this.outEndpoint_,()=>{this.writable_=null}),new ByteLengthQueuingStrategy({highWaterMark:this.serialOptions_.bufferSize??pe}))),this.writable_}async open(e){this.serialOptions_=e,this.validateOptions();try{await this.device_.open(),this.device_.configuration===null&&await this.device_.selectConfiguration(1),await this.device_.claimInterface(this.controlInterface_.interfaceNumber),this.controlInterface_!==this.transferInterface_&&await this.device_.claimInterface(this.transferInterface_.interfaceNumber),await this.setLineCoding(),await this.setSignals({dataTerminalReady:!0})}catch(r){throw this.device_.opened&&await this.device_.close(),new Error("Error setting up device: "+r.toString())}}async close(){const e=[];this.readable_&&e.push(this.readable_.cancel()),this.writable_&&e.push(this.writable_.abort()),await Promise.all(e),this.readable_=null,this.writable_=null,this.device_.opened&&(await this.setSignals({dataTerminalReady:!1,requestToSend:!1}),await this.device_.close())}async forget(){return this.device_.forget()}getInfo(){return{usbVendorId:this.device_.vendorId,usbProductId:this.device_.productId}}reconfigure(e){return this.serialOptions_={...this.serialOptions_,...e},this.validateOptions(),this.setLineCoding()}async setSignals(e){if(this.outputSignals_={...this.outputSignals_,...e},e.dataTerminalReady!==void 0||e.requestToSend!==void 0){const r=(this.outputSignals_.dataTerminalReady?1:0)|(this.outputSignals_.requestToSend?2:0);await this.device_.controlTransferOut({requestType:"class",recipient:"interface",request:Qe,value:r,index:this.controlInterface_.interfaceNumber})}if(e.break!==void 0){const r=this.outputSignals_.break?65535:0;await this.device_.controlTransferOut({requestType:"class",recipient:"interface",request:Je,value:r,index:this.controlInterface_.interfaceNumber})}}validateOptions(){if(!this.isValidBaudRate(this.serialOptions_.baudRate))throw new RangeError("invalid Baud Rate "+this.serialOptions_.baudRate);if(!this.isValidDataBits(this.serialOptions_.dataBits))throw new RangeError("invalid dataBits "+this.serialOptions_.dataBits);if(!this.isValidStopBits(this.serialOptions_.stopBits))throw new RangeError("invalid stopBits "+this.serialOptions_.stopBits);if(!this.isValidParity(this.serialOptions_.parity))throw new RangeError("invalid parity "+this.serialOptions_.parity)}isValidBaudRate(e){return e%1===0}isValidDataBits(e){return typeof e>"u"?!0:tt.includes(e)}isValidStopBits(e){return typeof e>"u"?!0:rt.includes(e)}isValidParity(e){return typeof e>"u"?!0:it.includes(e)}async setLineCoding(){const e=new ArrayBuffer(7),r=new DataView(e);if(r.setUint32(0,this.serialOptions_.baudRate,!0),r.setUint8(4,nt.indexOf(this.serialOptions_.stopBits??et)),r.setUint8(5,st.indexOf(this.serialOptions_.parity??Ke)),r.setUint8(6,this.serialOptions_.dataBits??Ze),(await this.device_.controlTransferOut({requestType:"class",recipient:"interface",request:Xe,value:0,index:this.controlInterface_.interfaceNumber},e)).status!="ok")throw new DOMException("NetworkError","Failed to set line coding.")}};class lt{async requestPort(e,r){r={...te,...r};const i=[];if(e&&e.filters)for(const l of e.filters){const p={classCode:r.usbControlInterfaceClass};l.usbVendorId!==void 0&&(p.vendorId=l.usbVendorId),l.usbProductId!==void 0&&(p.productId=l.usbProductId),i.push(p)}i.length===0&&i.push({classCode:r.usbControlInterfaceClass});const s=await navigator.usb.requestDevice({filters:i});return new re(s,r)}async getPorts(e){e={...te,...e};const r=await navigator.usb.getDevices(),i=[];return r.forEach(s=>{try{const n=new re(s,e);i.push(n)}catch{}}),i}}const we=new lt;function A(t,e,r,i,s){ArrayBuffer.isView(t)&&(e+=t.byteOffset,t=t.buffer),ArrayBuffer.isView(r)&&(i+=r.byteOffset,r=r.buffer);const n=new Uint8Array(t,e,s),l=new Uint8Array(r,i,s);n.set(l)}let W=[];async function M(){try{"serial"in navigator?W=await navigator.serial.getPorts():"usb"in navigator&&(W=await we.getPorts())}catch(t){console.warn("Unable to get previously used serial ports:",t.message)}}M();const z=function(){return W},ut=function(){try{return new ft}catch(t){return console.warn(t.message),null}},ft=class{constructor(){h(this,"options");h(this,"port");h(this,"reader");h(this,"writer");h(this,"keepReading");h(this,"inBuf");h(this,"inLen");h(this,"textEncoder");h(this,"textDecoder");h(this,"presets",{Adafruit:[{usbVendorId:9114}],Arduino:[{usbVendorId:1003,usbProductId:8465},{usbVendorId:1003,usbProductId:8535},{usbVendorId:4292,usbProductId:60016},{usbVendorId:6991},{usbVendorId:9025},{usbVendorId:9114},{usbVendorId:10755},{usbVendorId:13123,usbProductId:67}],MicroPython:[{usbVendorId:1027,usbProductId:24577},{usbVendorId:1027,usbProductId:24592},{usbVendorId:1027,usbProductId:24593},{usbVendorId:1027,usbProductId:24596},{usbVendorId:1027,usbProductId:24597},{usbVendorId:1027,usbProductId:24604},{usbVendorId:1684,usbProductId:9},{usbVendorId:3368,usbProductId:516},{usbVendorId:4292,usbProductId:6e4},{usbVendorId:6790,usbProductId:29987},{usbVendorId:11914,usbProductId:5},{usbVendorId:61525,usbProductId:38912}],RaspberryPi:[{usbVendorId:11914}]});if(this.options={baudRate:9600},this.port=null,this.reader=null,this.keepReading=!0,this.inBuf=new ArrayBuffer(1024*1024),this.inLen=0,this.textEncoder=new TextEncoder,this.textDecoder=new TextDecoder,!("serial"in navigator))if("usb"in navigator)console.log("Using WebUSB polyfill for WebSerial");else throw new Error("WebSerial is not supported in your browser (try Chrome or Edge)")}available(){const t=new Uint8Array(this.inBuf,0,this.inLen);let e=0;for(let r=0;r<t.length;r++){const i=t[r];(i>>7==0||i>>5==6&&r<t.length-1||i>>4==14&&r<t.length-2||i>>3==30&&r<t.length-3)&&e++}return e}availableBytes(){return this.inLen}bufferSize(t){if(t!=this.inBuf.byteLength){const e=new ArrayBuffer(t),r=Math.min(this.inLen,t);A(e,0,this.inBuf,this.inLen-r,r),this.inBuf=e,this.inLen=r}}clear(){this.inLen=0}close(){this.reader?(this.keepReading=!1,this.reader.cancel()):console.log("Serial port is already closed")}async dtr(t){var e,r;if(t===void 0)throw new Error("Pass either true or false to dtr() to turn the Data Terminal Ready signal on or off");t?await((e=this.port)==null?void 0:e.setSignals({dataTerminalReady:!0})):await((r=this.port)==null?void 0:r.setSignals({dataTerminalReady:!1}))}isSerialPort(t){return typeof SerialPort<"u"&&t instanceof SerialPort||t instanceof re}last(){if(!this.inLen)return"";const t=new Uint8Array(this.inBuf,0,this.inLen);let e=null,r=null;for(let i=t.length-1;0<=i;i--){const s=t[i];if(s>>7==0){e=i,r=1;break}else if(s>>5==6&&i<t.length-1){e=i,r=2;break}else if(s>>4==14&&i<t.length-2){e=i,r=3;break}else if(s>>3==30&&i<t.length-3){e=i,r=4;break}}if(e!==null&&r!==null){const i=new Uint8Array(this.inBuf,e,r),s=this.textDecoder.decode(i);return e+r<this.inLen&&A(this.inBuf,0,this.inBuf,e+r,this.inLen-r-e),this.inLen-=e+r,s}else return""}lastByte(){if(this.inLen){const t=new Uint8Array(this.inBuf,this.inLen-1,1);return this.inLen=0,t[0]}else return null}async open(...t){await this.selectPort(...t)}opened(){return this.port!==null&&this.isSerialPort(this.port)&&this.port.readable!==null}read(t=this.inLen){if(!this.inLen||!t)return"";const e=new Uint8Array(this.inBuf,0,this.inLen);let r=0,i=null,s=null,n=0;for(let l=0;l<e.length;l++){const p=e[l];let c;if(p>>7==0?(c=!0,r=0):p>>5==6?(c=!0,r=1):p>>4==14?(c=!0,r=2):p>>3==30?(c=!0,r=3):(c=!1,r--),i===null&&c&&(i=l),i!==null&&r<=0&&(n++,s=l-i+1),t<=n)break}if(i!==null&&s!==null){const l=new Uint8Array(this.inBuf,i,s),p=this.textDecoder.decode(l);return i+s<this.inLen&&A(this.inBuf,0,this.inBuf,i+s,this.inLen-s-i),this.inLen-=i+s,p}else return""}readUntil(t){let e=this.readArrayBufferUntil(t),r=null;for(let i=0;i<e.length;i++){const s=e[i];if(s>>7==0){r=i;break}else if(s>>5==6){r=i;break}else if(s>>4==14){r=i;break}else if(s>>3==30){r=i;break}}return r!==null?(0<r&&(e=new Uint8Array(e.buffer,e.byteOffset+r,e.length-r)),this.textDecoder.decode(e)):""}readArrayBuffer(t=this.inLen){if(this.inLen&&t){t=Math.min(t,this.inLen);const e=new Uint8Array(this.inBuf,0,t),r=new Uint8Array(e);return t<this.inLen&&A(this.inBuf,0,this.inBuf,t,this.inLen-t),this.inLen-=t,r}else return new Uint8Array([])}readArrayBufferUntil(t){if(typeof t=="string")t=this.textEncoder.encode(t);else if(typeof t=="number"&&Number.isInteger(t)){if(t<0||255<t)throw new TypeError("readArrayBufferUntil expects as an argument an integer between 0 to 255");t=new Uint8Array([t])}else if(Array.isArray(t)){for(let i=0;i<t.length;i++)if(typeof t[i]!="number"||!Number.isInteger(t[i])||t[i]<0||255<t[i])throw new TypeError("Array contained a value that wasn't an integer, or outside of 0 to 255");t=new Uint8Array(t)}else if(!(t instanceof Uint8Array))throw new TypeError("Supported types are: String, Integer number (0 to 255), Array of integer numbers (0 to 255), Uint8Array");if(!this.inLen||!t.length)return new Uint8Array([]);const e=new Uint8Array(this.inBuf,0,this.inLen);let r=0;for(let i=0;i<e.length;i++)if(e[i]===t[r]?r++:r=0,r==t.length){const s=new Uint8Array(this.inBuf,0,i+1),n=new Uint8Array(s);return i+1<this.inLen&&A(this.inBuf,0,this.inBuf,i+1,this.inLen-i-1),this.inLen-=i+1,n}return new Uint8Array([])}readByte(){const t=this.readArrayBuffer(1);return t.length?t[0]:null}readBytes(t=this.inLen){const e=this.readArrayBuffer(t),r=[];for(let i=0;i<e.length;i++)r.push(e[i]);return r}readBytesUntil(t){const e=this.readArrayBufferUntil(t),r=[];for(let i=0;i<e.length;i++)r.push(e[i]);return r}async rts(t){var e,r;if(t===void 0)throw new Error("Pass either true or false to rts() to turn the Request To Send signal on or off");t?await((e=this.port)==null?void 0:e.setSignals({requestToSend:!0})):await((r=this.port)==null?void 0:r.setSignals({requestToSend:!1}))}async selectPort(...t){let e=[];if(1<=t.length)if(Array.isArray(t[0]))e=t[0];else if(this.isSerialPort(t[0]))this.port=t[0],e=null;else if(typeof t[0]=="object")e=[t[0]];else if(typeof t[0]=="string"){const r=t[0];if(r in this.presets)e=this.presets[r];else throw new TypeError('Unrecognized preset "'+r+'", available: '+Object.keys(this.presets).join(", "))}else if(typeof t[0]=="number")this.options.baudRate=t[0];else throw new TypeError('Unexpected first argument "'+t[0]+'"');if(2<=t.length)if(typeof t[1]=="object")this.options=t[1];else if(typeof t[1]=="number")this.options.baudRate=t[1];else throw new TypeError('Unexpected second argument "'+t[1]+'"');try{e&&("serial"in navigator?this.port=await navigator.serial.requestPort({filters:e}):"usb"in navigator&&(this.port=await we.requestPort({filters:e})))}catch(r){console.warn(r.message),this.port=null}}async start(t){var e,r,i;if(!this.port){console.error("No serial port selected.");return}try{await this.port.open(this.options),console.log("Connected to serial port"),this.keepReading=!0}catch(s){let n=s.message;throw n.includes("already open")&&(n+=" (the port may be open in another program, please try refreshing the tab)"),console.error(n),s}for(;this.port.readable&&this.keepReading;){this.reader=this.port.readable.getReader(),this.writer=(e=this.port.writable)==null?void 0:e.getWriter();try{for(;;){let{value:s,done:n}=await this.reader.read();if(n){await((r=this.writer)==null?void 0:r.ready),(i=this.writer)==null||i.releaseLock(),this.reader.releaseLock();break}s&&(this.inBuf.byteLength<s.length&&(s=new Uint8Array(s.buffer,s.byteOffset+s.length-this.inBuf.byteLength,this.inBuf.byteLength)),this.inBuf.byteLength<this.inLen+s.length&&(A(this.inBuf,0,this.inBuf,this.inLen+s.length-this.inBuf.byteLength,this.inBuf.byteLength-s.length),console.warn("Discarding the oldest "+(this.inLen+s.length-this.inBuf.byteLength)+" bytes of serial input data (you might want to read more frequently or increase the buffer via bufferSize())"),this.inLen-=this.inLen+s.length-this.inBuf.byteLength),A(this.inBuf,this.inLen,s,0,s.length),this.inLen+=s.length,t&&t(this.read()))}}catch(s){this.reader.releaseLock(),console.warn(s.message)}}this.port.close(),this.reader=null,console.log("Disconnected from serial port")}async forget(){M(),this.port&&(console.log("Forgetting current serial port"),this.close(),this.port=null);for(let t of W){console.log(t);try{await t.close()}catch(e){console.warn(e.message)}await t.forget()}}async write(t){var r,i;let e;if(typeof t=="string")e=this.textEncoder.encode(t);else if(typeof t=="number"&&Number.isInteger(t)){if(t<0||255<t)throw new TypeError("Write expects a number between 0 and 255 for sending it as a byte. To send any number as a sequence of digits instead, first convert it to a string before passing it to write().");e=new Uint8Array([t])}else if(Array.isArray(t)){for(let s=0;s<t.length;s++)if(typeof t[s]!="number"||!Number.isInteger(t[s])||t[s]<0||255<t[s])throw new TypeError("Array contained a value that wasn't an integer, or outside of 0 to 255");e=new Uint8Array(t)}else if(t instanceof ArrayBuffer||ArrayBuffer.isView(t))e=t;else throw new TypeError("Supported types are: String, Integer number (0 to 255), Array of integer numbers (0 to 255), ArrayBuffer, TypedArray or DataView");return!this.port||!this.port.writable?(console.warn("Serial port is not open, ignoring write"),!1):(await((r=this.writer)==null?void 0:r.ready),await((i=this.writer)==null?void 0:i.write(e)),!0)}};function ct(t,e,r,i,s){const n=t.target;if(b(e,n.value,!0),f(r)){i(f(e));return}if(f(e).includes("\r")||f(e).includes(`
`)){if(typeof KeyboardEvent>"u")return;s(new KeyboardEvent("keydown",{key:"Enter"}))}}const ht=t=>{t.preventDefault();const e=document.getElementById("touchinput");e&&e.focus()};var dt=I("<pre><!></pre>"),pt=I('<pre class="output svelte-x8aqv9"> </pre>'),bt=I("<pre> </pre>"),_t=I('<span class="prompt svelte-x8aqv9"><!></span> <pre> </pre>',1),gt=I('<div class="terminal-line svelte-x8aqv9"><!></div>'),yt=I('<span class="prompt svelte-x8aqv9"><!></span>'),wt=I('<pre class="input svelte-x8aqv9"> </pre> <span class="cursor svelte-x8aqv9"></span>',1),mt=I('<pre class="input svelte-x8aqv9"> </pre> <span class="cursor svelte-x8aqv9"></span>',1),vt=I('<div class="terminal svelte-x8aqv9" id="terminal-wrapper"><!> <div class="terminal-line svelte-x8aqv9"><!> <textarea autocomplete="off" spellcheck="false" autocapitalize="off" name="mobileinput" id="touchinput" class="svelte-x8aqv9"></textarea> <!></div></div> <!>',1);function xt(t,e){ge(e,!0);const r=new Ge,i="anon@zeyus&gt;";let s=O(ue([]));function n(u,o){b(s,[...f(s),{text:u,type:o}],!0)}n(`            __________                                 
         .'----------\`.                              
         | .--------. |                             
         | |########| |       __________              
         | |########| |      /__________             
.--------| \`--------' |------|    --=-- |-------------.
|        \`----,-.-----'      |o ======  |             | 
|       ______|_|_______     |__________|             | 
|      /  %%%%%%%%%%%%  \\                             | 
|     /  %%%%%%%%%%%%%%  \\                            | 
|     ^^^^^^^^^^^^^^^^^^^^                            | 
+-----------------------------------------------------+`,"output"),n(`
`,"output"),n(`WARNING:  Unauthorized access to this system is
forbidden and will be prosecuted by law. By accessing
this system, you agree that your actions may be
monitored if unauthorized usage is suspected.`,"output"),n(`
`,"output"),n('Type "help" for a list of commands.',"output"),n(`
`,"output");let l=O(""),p=O(null),c=O(!1),x,w=O("");const _=ut()||null;function H(u){u.preventDefault();const o=document.getElementById("touchinput");if(f(c)){xe(u);return}o&&(u.key==="Enter"?(b(s,[...f(s),{text:f(l),type:"input"}],!0),ke(f(l)),b(l,""),o.value="",setTimeout(()=>{x.scrollTop=x.scrollHeight},0)):u.key==="Backspace"?b(l,f(l).slice(0,-1),!0):u.key.length===1&&b(l,f(l)+u.key))}function me(u,o=25){if(!(typeof KeyboardEvent>"u")){for(let a=0;a<u.length;a++)setTimeout(()=>{b(l,f(l)+u[a])},o*a);setTimeout(()=>{H(new KeyboardEvent("keydown",{key:"Enter"}))},o*u.length)}}async function ve(u){await ie(u)}async function xe(u){const o=u.key;if(o==="Control"||o==="Shift"||o==="Alt"||o==="Meta")return;let a,g=!1;switch(o){case"Enter":g=!0,a=`
`,n(f(w),"serial"),b(w,"");break;case"Backspace":a="\b";break;case"Escape":f(p)!==null&&(b(c,!1),_==null||_.close());return;default:if(u.ctrlKey)switch(g=!0,o){case"@":a="\0";break;case"a":a="";break;case"b":a="";break;case"c":a="";break;case"d":a="";break;case"e":a="";break;case"f":a="";break;case"g":a="\x07";break;case"h":a="\b";break;case"i":a="	";break;case"j":a=`
`;break;case"k":a="\v";break;case"l":a="\f";break;case"m":a="\r";break;case"n":a="";break;case"o":a="";break;case"p":a="";break;case"q":a="";break;case"r":a="";break;case"s":a="";break;case"t":a="";break;case"u":a="";break;case"v":a="";break;case"w":a="";break;case"x":a="";break;case"y":a="";break;case"z":a="";break;case"[":a="\x1B";break;case"\\":a="";break;case"]":a="";break;case"^":a="";break;case"_":a="";break;case"?":a="";break;default:return}else{a=o;break}}await ie(a,g)}async function ie(u,o=!1){o||b(w,f(w)+u),_==null||_.write(u)}async function Se(u){const o=u.split(`
`);if(o.length===1){b(w,f(w)+o[0]);return}for(let a=0;a<o.length;a++){const g=o[a];b(w,f(w)+g),n(g,"serial"),b(w,"")}}function ke(u){u=u.trim().replace(/\s+/g," ");const o=u.split(" "),a=o[0];switch(a){case"echo":const g=o.slice(1).join(" "),G=r.ansi_to_html(g.replace(/\\033/g,"\x1B").replace(/\\e/g,"\x1B").replace(/\\n/g,`
`).replace(/\\t/g,"	").replace(/\\r/g,"\r").replace(/\\b/g,"\b").replace(/\\f/g,"\f").replace(/\\v/g,"\v").replace(/\\0/g,"\0").replace(/\\x1b/g,"\x1B"));n(G,"output");break;case"clear":b(s,[],!0);break;case"help":n("Commands: echo, clear, help, serial","output");break;case"serial":if(!_){n("Uh, uh uh! You didn't say the magic word!","error"),n(":( Unfortunately serial not supported in this browser","error"),n("You need a browser that supports Web Serial API or the USB API","error");break}if(o.length<2){n("Serial commands: list, open, close, forget","output");break}const j=o[1];switch(j){case"list":n("Listing serial ports...","output"),b(P,z(),!0),f(P).forEach((y,B)=>{n("Allowed port "+B.toString(),"serial")}),f(P).length===0&&n('No serial ports permitted, to use them from your browser please request them using "serial open ..."',"serial");break;case"open":if(o.length<7){n(`Usage: serial open BAUD_RATE DATA_BITS STOP_BITS PARITY FLOW_CONTROL
BAUD_RATE: The baud rate to use (default: 9600)
DATA_BITS: The number of data bits (default: 8)
STOP_BITS: The number of stop bits (default: 1)
PARITY: The parity to use (default: none)
FLOW_CONTROL: The flow control to use (default: none)
Example: serial open 9600 8 1 none none`,"output");break}const k=parseInt(o[2]),E=parseInt(o[3]),V=parseInt(o[4]),Y=o[5],L=o[6];_.open(k).then(()=>{const y=_.port;if(y===null){n("No serial ports available","error");return}M().then(()=>{b(P,z(),!0),b(p,z().indexOf(y),!0)}),n("Opening serial port, to exit press Escape...","serial"),b(c,!0),b(w,""),_.selectPort(y,{baudRate:k,dataBits:E,stopBits:V,parity:Y,flowControl:L}).then(()=>{_.start(Se).then(()=>{b(c,!1),n("Serial port closed","serial")}).catch(B=>{b(c,!1),n(`Error starting serial port: ${B}`,"error"),n("Try refreshing the browser tab or ensuring the port is not used by another program.","error")})}).catch(B=>{b(c,!1),n(`Error opening serial port: ${B}`,"error")})}).catch(y=>{n(`Error opening serial port: ${y}`,"error")});break;case"close":n("Closing serial port...","serial"),_.close(),n("Closed serial port","serial");break;case"forget":n("Forgetting serial ports...","serial"),_.forget().then(()=>{n("Serial ports forgotten.","serial"),M().then(()=>{b(P,z(),!0),b(p,null)})}).catch(y=>{n(`Error forgetting serial ports: ${y}`,"error")});break;default:n(`Unknown serial command: ${j}`,"error");break}break;default:n(`Unknown command: ${a}`,"error");break}}me("echo 👋\\x1b[31mHello\\x1b[0m👋\\n🌍\\x1b[32mWorld\\x1b[0m🌍");let P=O(ue([]));$e(()=>{const u=f(s).length;x.scrollTop=x.scrollHeight+0*u});var se=vt();Ve("keydown",je,H);var q=F(se);q.__touchend=[ht];var ne=m(q);ze(ne,17,()=>f(s),We,(u,o)=>{var a=gt(),g=m(a);{var G=k=>{var E=dt(),V=m(E);J(V,()=>f(o).text,!1,!1),v(E),C(()=>Z(E,1,K(f(o).type),"svelte-x8aqv9")),S(k,E)},j=(k,E)=>{{var V=L=>{var y=pt(),B=m(y,!0);v(y),C(()=>N(B,f(o).text)),S(L,y)},Y=(L,y)=>{{var B=U=>{var T=bt(),D=m(T,!0);v(T),C(()=>{Z(T,1,K(f(o).type),"svelte-x8aqv9"),N(D,f(o).text)}),S(U,T)},Ue=U=>{var T=_t(),D=F(T),Oe=m(D);J(Oe,()=>i,!1,!1),v(D);var X=$(D,2),Ce=m(X,!0);v(X),C(()=>{Z(X,1,K(f(o).type),"svelte-x8aqv9"),N(Ce,f(o).text)}),S(U,T)};R(L,U=>{f(o).type==="error"?U(B):U(Ue,!1)},y)}};R(k,L=>{f(o).type==="serial"?L(V):L(Y,!1)},E)}};R(g,k=>{f(o).type==="output"?k(G):k(j,!1)})}v(a),S(u,a)});var ae=$(ne,2),oe=m(ae);{var Be=u=>{var o=yt(),a=m(o);J(a,()=>i,!1,!1),v(o),S(u,o)};R(oe,u=>{f(c)||u(Be)})}var le=$(oe,2);le.__input=[ct,l,c,ve,H];var Ie=$(le,2);{var Ee=u=>{var o=wt(),a=F(o),g=m(a,!0);v(a),Q(2),C(()=>N(g,f(w))),S(u,o)},Le=u=>{var o=mt(),a=F(o),g=m(a,!0);v(a),Q(2),C(()=>N(g,f(l))),S(u,o)};R(Ie,u=>{f(c)?u(Ee):u(Le,!1)})}v(ae),v(q),Me(q,u=>x=u,()=>x);var Te=$(q,2);{var Ae=u=>{He(u,{name:"Disconnect",$$events:{click:()=>{b(c,!1),_==null||_.close()}},children:(o,a)=>{Q();var g=De("Disconnect");S(o,g)},$$slots:{default:!0}})};R(Te,u=>{f(c)&&u(Ae)})}S(t,se),ye()}qe(["touchend","input"]);function Pt(t,e){ge(e,!1),Fe("metadata").setMetadata({title:"terminal",description:"A working web-based serial terminal that can be used to interact with a microcontroller or any other serial devices connected to your PC. Right from your browser!"}),Ne(),xt(t,{}),ye()}export{Pt as default};
